\name{createDefMeasures}
\alias{createDefMeasures}
\title{ Create input table for descriptive table generated by descrTable }
\description{ Create input table for descriptive table generated by descrTable. This input table
    defines the variables to report, the measures to apply and the precision of the results. }
\usage{createDefMeasures(d.data, var.list)
}
\arguments{
  \item{d.data}{ Data frame to report statistics from }
  \item{var.list}{ A data frame for the mapping of the variable names to meaningful labels. The
      attribute 'var_name' for the variable names in d.data and 'var_label' for the labels. }
}
\details{ utility function for formating }
\value{ data.frame as input for 'descrTable' }
\references{ none }
\author{ Roland Rapold }
\note{ under continuous developement }
\seealso{ other utility-functions in this R-package }
\examples{
if(require("car")) {
print("load sample data 'Mroz' from package 'car' .......................................")
data(Mroz)
str(Mroz)

print("insert attribute 'i' for population size ........................................")
Mroz <- merge(data.frame(i=as.factor(1)), Mroz)
str(Mroz)

print("reference list for variable labels ........................................")
var.list <- data.frame(var_name=c("i", "lfp", "k5", "k618", "wc", "lwg", "inc"),
                       var_label=c("population",
                                   "employed",
                                   "# children to 5", "# children 6-18",
                                   "wife college",
                                   "log expected wage",
                                   "family income excl. wife"))

print("create definition-table without variable for groups")
Mroz_hc      <- Mroz[ , -which(colnames(Mroz)=="hc")]

print("variation 1: default, no adjustments")
def.measures.1 <- createDefMeasures(d.data=Mroz_hc)
print(def.measures.1)

print("variation 2: apply variable labels")
def.measures.2 <- createDefMeasures(d.data=Mroz_hc, var.list=var.list)
def.measures.2[2, 6] <- -2
def.measures.2[9, 6] <- -1
print(def.measures.2)

} }

