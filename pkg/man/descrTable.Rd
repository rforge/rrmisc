% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/descrTable.R
\name{descrTable}
\alias{descrTable}
\title{Create descritive table}
\usage{
descrTable(
  def.measures,
  sub.d1,
  sub.d2 = NULL,
  sub.d3 = NULL,
  sub.d4 = NULL,
  sub.d5 = NULL,
  weights.1 = NULL,
  weights.2 = NULL,
  weights.3 = NULL,
  weights.4 = NULL,
  weights.5 = NULL,
  label.compact = FALSE,
  label.width = 48,
  test.gr = NULL,
  lang = "de",
  group.size.total = 0,
  big.mark = "'",
  only.first.label = FALSE,
  verbose = 0
)
}
\arguments{
\item{def.measures}{description scheme with measures, e.g. from createDefMeasures()}

\item{sub.d1}{vectors of data in column 1}

\item{sub.d2}{vectors of data in column 2}

\item{sub.d3}{vectors of data in column 3}

\item{sub.d4}{vectors of data in column 4}

\item{sub.d5}{vectors of data in column 5}

\item{weights.1}{vectors of weights of data column 1}

\item{weights.2}{vectors of weights of data column 2}

\item{weights.3}{vectors of weights of data column 3}

\item{weights.4}{vectors of weights of data column 4}

\item{weights.5}{vectors of weights of data column 5}

\item{label.compact}{If to compact result columns label and measure or make two columns.}

\item{label.width}{Width of first column if label.compact == TRUE.}

\item{test.gr}{Index of columns to compare.}

\item{lang}{Language for certain key words german 'de' or english 'en'.}

\item{group.size.total}{Column for group size total (if 'portion' is requested).}

\item{big.mark}{Thousand separator as used in format().}

\item{only.first.label}{For multiple lines of a label, show label only in first line}

\item{verbose}{Verbose level between 0 and 2.}
}
\value{
List with:

-- descriptive table according to scheme defined in 'def_measures' (usually created by #' 'createDefMeasures()' and potentially modified)

-- indication of tests used
}
\description{
Create descriptive table with up to five subgroups/total and comparison
between groups.
}
\details{
utility function for formating
}
\note{
under continuous developement
}
\examples{
if(require("carData") & require("data.table"))
{
  # sample data 'Mroz' from package 'car'
  require("carData")
  require("data.table")

  data(Mroz, package = "carData")
  MrozDT <- as.data.table(Mroz)
  str(MrozDT)

  # insert attribute 'i' for population size
  MrozDT[, i := as.factor(1)]
  str(MrozDT)

  # reference list for variable labels
  var.list <- data.frame(var_name = c("i", "lfp", "k5", "k618", "wc", "lwg", "inc"),
                         var_label = c("population",
                                       "employed",
                                       "# children to 5", "# children 6-18",
                                       "wife college",
                                       "log expected wage",
                                       "family income excl. wife"))

  # create definition-table without variable for groups
  MrozDT_hc <- MrozDT[, -c("hc")]

  # variation 1: default, no adjustments
  def.measures.1 <- createDefMeasures(d.data = MrozDT_hc)
  print(def.measures.1)

  # variation 2: apply variable labels
  def.measures.2 <- createDefMeasures(d.data = MrozDT_hc, var.list = var.list)
  def.measures.2[2, 6] <- -2
  def.measures.2[9, 6] <- -1
  print(def.measures.2)

  # run different scenarios with modified data
  #  - variation 1: default, no adjustments
  descrTable1 <- NULL
  descrTable1 <- descrTable(def.measures = def.measures.1          ,
                            sub.d1 = subset(MrozDT, hc == "no")    ,
                            sub.d2 = subset(MrozDT, hc == "yes")   ,
                            sub.d3 = MrozDT                        ,
                            group.size.total = 3                   ,
                            test.gr = c(1, 2)                      )
  print(descrTable1)


  descrTable2 <- descrTable(def.measures = def.measures.2,
                            sub.d1 = subset(MrozDT, hc == "no"),
                            sub.d2 = subset(MrozDT, hc == "yes"),
                            sub.d3 = MrozDT,
                            test.gr = c(1, 2),
                            lang="en")
  print(descrTable2)

  if(require("doBy"))
  {
    #  - variation 1: verify statistics
    print(doBy::summaryBy(k5+k618+age+lwg+inc~hc, data = MrozDT, FUN = c(mean, median, sum)))
    print(table(MrozDT$lfp, MrozDT$hc, dnn = c("lfp", "hc")))
    print(table(MrozDT$wc, MrozDT$hc, dnn = c("lfp", "hc")))
  }

  # - variation 2: insert some missing values for 'lfp'
  #                   3 at MrozDT$lfp where hc = 'no'
  n1 <- sample(which(MrozDT$hc == "no"), 3)
  MrozDT[n1, "lfp"] <- NA
  #                   2 at MrozDT$lfp where hc = 'yes'
  n2 <- sample(which(MrozDT$hc == "yes"), 2)
  MrozDT[n2, "lfp"] <- NA

  descrTable3 <- descrTable(def.measures = def.measures.2,
                            sub.d1 = subset(MrozDT, hc == "no"),
                            sub.d2 = subset(MrozDT, hc == "yes"),
                            sub.d3 = MrozDT,
                            test.gr = c(1, 2),
                            lang = "en")
  print(descrTable3)

  # - variation 3: insert some missing values for 'age'
  #                   1 at MrozDT$lfp where hc = 'no'
  n3 <- sample(which(MrozDT$hc == "no"), 1)
  MrozDT[n3, "age"] <- NA
  #                   5 at MrozDT$lfp where hc='no'
  n4 <- sample(which(MrozDT$hc == "yes"), 5)
  MrozDT[n4, "age"] <- NA

  descrTable4 <- descrTable(def.measures = def.measures.2,
                            sub.d1 = subset(MrozDT, hc == "no"),
                            sub.d2 = subset(MrozDT, hc == "yes"),
                            sub.d3 = MrozDT,
                            test.gr = c(1, 2),
                            lang = "en")
  print(descrTable4)

  # - variation 4: provoke warnings for small sample size
  MrozDT_ <- MrozDT[1:15, ]

  descrTable5 <- descrTable(def.measures = def.measures.2,
                            sub.d1 = subset(MrozDT_, hc == "no"),
                            sub.d2 = subset(MrozDT_, hc == "yes"),
                            sub.d3 = MrozDT_,
                            test.gr = c(1, 2),
                            lang = "en", only.first.label=TRUE)
  print(descrTable5)

  # - variation 5: compare 4 groups
  MrozDT[MrozDT$wc == "no"  & MrozDT$hc == "no",  "wchc"] <- "no-no"
  MrozDT[MrozDT$wc == "yes" & MrozDT$hc == "no",  "wchc"] <- "yes-no"
  MrozDT[MrozDT$wc == "no"  & MrozDT$hc == "yes", "wchc"] <- "no-yes"
  MrozDT[MrozDT$wc == "yes" & MrozDT$hc == "yes", "wchc"] <- "yes-yes"

  descrTable6 <- descrTable(def.measures = def.measures.2,
                            sub.d1 = subset(MrozDT, wchc == "no-no"),
                            sub.d2 = subset(MrozDT, wchc == "no-yes"),
                            sub.d3 = subset(MrozDT, wchc == "yes-no"),
                            sub.d4 = subset(MrozDT, wchc == "yes-yes"),
                            test.gr = c(1, 2 , 3, 4), only.first.label = TRUE)
  print(descrTable6)

  descrTable7 <- descrTable(def.measures = def.measures.2,
                            sub.d1 = subset(MrozDT, wchc == "no-no"),
                            sub.d2 = subset(MrozDT, wchc == "no-yes"),
                            sub.d3 = subset(MrozDT, wchc == "yes-no"),
                            sub.d4 = subset(MrozDT, wchc == "yes-yes"),
                            only.first.label = TRUE)
  print(descrTable7)

}
}
\references{
none
}
\seealso{
other utility-functions in this R-package
}
\author{
Roland Rapold
}
